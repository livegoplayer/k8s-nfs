apiVersion: v1
kind: Namespace
metadata:
  name: nfs-server
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: app-storage
reclaimPolicy: Retain
volumeBindingMode: Immediate
provisioner: kubernetes.io/host-path
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-pv-volume
  labels:
    type: app_volome
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: app-storage
  hostPath:
    path: /apps
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - localhost.kvm-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pv-claim
spec:
  storageClassName: app-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nfs-server
spec:
  serviceName: "nfs-server"
  replicas: 1
  selector:
    matchLabels:
      app: nfs
  template:
    metadata:
      labels:
        app: nfs
    spec:
      hostNetwork: true
      nodeName: localhost.kvm-1
      volumes:
      - name: nfs-pv-storage
        persistentVolumeClaim:
          claimName: local-pv-claim
      - name: app-pv-storage
        persistentVolumeClaim:
          claimName: app-pv-claim        
      containers:
      - name: nfs-server
        image: erichough/nfs-server 
        imagePullPolicy: IfNotPresent
        env:
        - name: NFS_EXPORT_0
          value: '/apps                                      *(rw,all_squash,anonuid=0,anongid=0)'
        volumeMounts:
        - mountPath: /apps
          name: app-pv-storage
        securityContext:
          privileged: true
